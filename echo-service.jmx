<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">500</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&quot;schema&quot;:&quot;Person&quot;,&quot;id&quot;:&quot;http://wso2jsonschema.org&quot;,&quot;title&quot;:&quot;root&quot;,&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;calendarId&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/calendarId&quot;,&quot;type&quot;:&quot;string&quot;},&quot;fields&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/fields&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:&quot;true&quot;},&quot;kind&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/kind&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:&quot;true&quot;},&quot;id&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/id&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:&quot;true&quot;},&quot;etag&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/etag&quot;,&quot;type&quot;:&quot;string&quot;},&quot;scope&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/scope&quot;,&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;type&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/scope/type&quot;,&quot;type&quot;:&quot;string&quot;},&quot;value&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/scope/value&quot;,&quot;type&quot;:&quot;string&quot;}}},&quot;role&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/role&quot;,&quot;type&quot;:&quot;string&quot;}}},{&quot;schema&quot;:&quot;Person&quot;,&quot;id&quot;:&quot;http://wso2jsonschema.org&quot;,&quot;title&quot;:&quot;notroot&quot;,&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;calendarId&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/calendarId&quot;,&quot;type&quot;:&quot;string&quot;},&quot;fields&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/fields&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:&quot;true&quot;},&quot;kind&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/kind&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:&quot;true&quot;},&quot;id&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/id&quot;,&quot;type&quot;:&quot;string&quot;,&quot;nullable&quot;:&quot;true&quot;},&quot;etag&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/etag&quot;,&quot;type&quot;:&quot;string&quot;},&quot;scope&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/scope&quot;,&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;type&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/scope/type&quot;,&quot;type&quot;:&quot;string&quot;},&quot;value&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/scope/value&quot;,&quot;type&quot;:&quot;string&quot;}}},&quot;role&quot;:{&quot;id&quot;:&quot;http://wso2jsonschema.org/role&quot;,&quot;type&quot;:&quot;string&quot;}}}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">4000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/uploader</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">100</stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay"></stringProp>
        </ConstantTimer>
        <hashTree/>
        <PoissonRandomTimer guiclass="PoissonRandomTimerGui" testclass="PoissonRandomTimer" testname="Poisson Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">300</stringProp>
          <stringProp name="RandomTimer.range">1000</stringProp>
        </PoissonRandomTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
